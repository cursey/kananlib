# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

 
add_compile_options($<$<CXX_COMPILER_ID:MSVC>:/MP>)

# mklink the parent dir as kananlib/ with command line stuff
set(TARGET_DIR "${CMAKE_CURRENT_SOURCE_DIR}")

execute_process(
    COMMAND cmd /c mklink /J kananlib ..
    WORKING_DIRECTORY ${TARGET_DIR}
    RESULT_VARIABLE result
    OUTPUT_VARIABLE output
    ERROR_VARIABLE error_output
)

project(kananlibtest)

message(STATUS ${PROJECT_SOURCE_DIR})

include(FetchContent)

# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
if(POLICY CMP0135)
	cmake_policy(SET CMP0135 NEW)
endif()
message(STATUS "Fetching bddisasm (v1.37.0)...")
FetchContent_Declare(bddisasm SYSTEM
	GIT_REPOSITORY
		"https://github.com/bitdefender/bddisasm"
	GIT_TAG
		v1.37.0
	GIT_SHALLOW
		ON
)
FetchContent_MakeAvailable(bddisasm)

message(STATUS "Fetching spdlog (v1.12.0)...")
FetchContent_Declare(spdlog SYSTEM
	GIT_REPOSITORY
		"https://github.com/gabime/spdlog"
	GIT_TAG
		v1.12.0
	GIT_SHALLOW
		ON
)
FetchContent_MakeAvailable(spdlog)

# Target: kananlib-test
set(CMKR_TARGET kananlib-test)
add_subdirectory(kananlib)

set(kananlib-test_SOURCES
	Main.cpp
	cmake.toml
)

add_executable(kananlib-test)

target_sources(kananlib-test PRIVATE ${kananlib-test_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${kananlib-test_SOURCES})

target_compile_features(kananlib-test PRIVATE
	cxx_std_20
)

target_compile_options(kananlib-test PRIVATE
	"/EHa"
)

target_include_directories(kananlib-test PRIVATE
	include
)

target_link_libraries(kananlib-test PRIVATE
	bddisasm::bddisasm
	spdlog::spdlog
	shlwapi
	kananlib
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT kananlib-test)
endif()
